//#include <iostream>
//using namespace std;
//
////对象的初始化和清理
//class Person
//{
//public:
//	//1 构造函数
//	//没有返回值 不用写void
//	//函数名与类名相同
//	//构造函数可以有参数，可以发生重载
//	//创建对象的时候，构造函数会自动调用，而且只调用一次
//	Person()
//	{
//		cout << "构造函数的调用" << endl;
//	}
//	//2 析构函数
//	//没有返回值 不用写void
//	//函数名与类名相同 名称前加“~”
//	//析构函数不可以有参数，不可以重载
//	//对象在销毁前会自动调用析构函数，而且只调用一次
//	~Person()
//	{
//		cout << "析构函数的调用" << endl;
//	}
//};
////构造函数和析构都是必须有的实现，如果我们不提供，编译器会提供一个空实现（函数体代码为空）的构造和析构
//
//void test01()
//{
//	Person p;//栈上的数据，test01执行完毕后，释放这个对象
//}
//
//int main()
//{
//	test01();//创建对象的时候，构造函数会自动调用，而且只调用一次
//
//	Person p;//只出现了构造，是因为main函数没有结束，结束后会出现析构
//
//	system("pause");
//
//	return 0;
//}